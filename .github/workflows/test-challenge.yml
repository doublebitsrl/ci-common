name: "Run Challenge Tests"
description: "Runs tests for a specific challenge and posts results to the PR."

on:
  workflow_call:
    inputs:
      challengeId:
        required: true
        type: string
    secrets:
      PRIVATE_REPO_PAT:
        required: true
      OPENAI_API_KEY:
        required: true

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      # 1) Checkout del codice candidato (template-repo)
      - name: Checkout candidate code
        uses: actions/checkout@v3

      # 2) Checkout del repo privato dei test
      - name: Checkout challenge-tests
        uses: actions/checkout@v3
        with:
          repository: doublebitsrl/challenge-tests
          path: challenge-tests
          token: ${{ secrets.PRIVATE_REPO_PAT }}

      # 3) Checkout del repo ci-common (per lo script di formattazione)
      - name: Checkout ci-common
        uses: actions/checkout@v3
        with:
          repository: doublebitsrl/ci-common
          path: ci-common
          token: ${{ secrets.PRIVATE_REPO_PAT }}

      # 4) Install deps di ci-common (openai + helper)
      - name: Install ci-common dependencies
        run: |
          cd ci-common
          npm ci

      # 5) Copia lo stub main nel repo dei test
      - name: Copy main stub into challenge-tests
        run: |
          mkdir -p challenge-tests/src
          cp src/main.js challenge-tests/src/main.js

      # 6) Installa le dipendenze dei test
      - name: Install challenge-tests dependencies
        run: |
          cd challenge-tests
          npm install --no-audit --prefer-offline --progress=false

      # 7) Esegui i test per il challenge selezionato
      - name: Run challenge tests
        run: |
          cd challenge-tests
          npm run test:ci -- --testPathPattern="tests/${{ inputs.challengeId }}/"
        continue-on-error: true

      # 8) AI Code Review con OpenAI
      - name: AI Code Review
        run: |
          node ci-common/.github/scripts/aiReview.js
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 9) Format report.json in summary.md (tabella Markdown)
      - name: Format combined report
        run: |
          node ci-common/.github/scripts/formatReport.js

      # 10) Commenta la PR con tabella + valutazione AI
      - name: Comment PR with results
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const combinedReport = fs.readFileSync('challenge-tests/summary.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: combinedReport
            });
